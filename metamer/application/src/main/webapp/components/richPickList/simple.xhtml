<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:metamer="http://java.sun.com/jsf/composite/metamer"
      xmlns:r="http://richfaces.org">

    <!--
    JBoss, Home of Professional Open Source
    Copyright 2010-2013, Red Hat, Inc. and individual contributors
    by the @authors tag. See the copyright.txt in the distribution for a
    full listing of individual contributors.
    
    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 2.1 of
    the License, or (at your option) any later version.
    
    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>

        <ui:define name="component">
            <r:pickList id="pickList"
                        addAllText="#{richPickListBean.attributes['addAllText'].value}"
                        addText="#{richPickListBean.attributes['addText'].value}"
                        collectionType="java.util.LinkedList"
                        columnClasses="#{richPickListBean.attributes['columnClasses'].value}"
                        disabled="#{richPickListBean.attributes['disabled'].value}"
                        downBottomText="#{richPickListBean.attributes['downBottomText'].value}"
                        downText="#{richPickListBean.attributes['downText'].value}"
                        immediate="#{richPickListBean.attributes['immediate'].value}"
                        listHeight="#{richPickListBean.attributes['listHeight'].value}"
                        maxListHeight="#{richPickListBean.attributes['maxListHeight'].value}"
                        minListHeight="#{richPickListBean.attributes['minListHeight'].value}"
                        onadditems="#{richPickListBean.attributes['onadditems'].value}"
                        onblur="#{richPickListBean.attributes['onblur'].value}"
                        onchange="#{richPickListBean.attributes['onchange'].value}"
                        onclick="#{richPickListBean.attributes['onclick'].value}"
                        ondblclick="#{richPickListBean.attributes['ondblclick'].value}"
                        onfocus="#{richPickListBean.attributes['onfocus'].value}"
                        onkeydown="#{richPickListBean.attributes['onkeydown'].value}"
                        onkeypress="#{richPickListBean.attributes['onkeypress'].value}"
                        onkeyup="#{richPickListBean.attributes['onkeyup'].value}"
                        onmousedown="#{richPickListBean.attributes['onmousedown'].value}"
                        onmousemove="#{richPickListBean.attributes['onmousemove'].value}"
                        onmouseout="#{richPickListBean.attributes['onmouseout'].value}"
                        onmouseover="#{richPickListBean.attributes['onmouseover'].value}"
                        onmouseup="#{richPickListBean.attributes['onmouseup'].value}"
                        onremoveitems="#{richPickListBean.attributes['onremoveitems'].value}"
                        orderable="#{richPickListBean.attributes['orderable'].value}"
                        removeAllText="#{richPickListBean.attributes['removeAllText'].value}"
                        removeText="#{richPickListBean.attributes['removeText'].value}"
                        rendered="#{richPickListBean.attributes['rendered'].value}"
                        required="#{richPickListBean.attributes['required'].value}"
                        requiredMessage="#{richPickListBean.attributes['requiredMessage'].value}"
                        sourceCaption="#{richPickListBean.attributes['sourceCaption'].value}"
                        style="#{richPickListBean.attributes['style'].value}"
                        styleClass="#{richPickListBean.attributes['styleClass'].value}"
                        switchByClick="#{richPickListBean.attributes['switchByClick'].value}"
                        switchByDblClick="#{richPickListBean.attributes['switchByDblClick'].value}"
                        targetCaption="#{richPickListBean.attributes['targetCaption'].value}"
                        upText="#{richPickListBean.attributes['upText'].value}"
                        upTopText="#{richPickListBean.attributes['upTopText'].value}"
                        validator="#{richPickListBean.validatePickListValue}"
                        validatorMessage="#{richPickListBean.attributes['validatorMessage'].value}"
                        value="#{richPickListBean.value}"
                        valueChangeListener="#{richBean.valueChangeListenerImproved}"
                        var="#{richPickListBean.attributes['var'].value}">
                <f:selectItems value="#{richPickListBean.validationOptions}" />
            </r:pickList>

            <r:message id="msg" for="pickList" />
            <br/>
            <br/>
            <h:commandButton id="hButton" value="h:commandButton" style="margin-right: 10px;" />
            <r:commandButton id="a4jButton" value="r:commandButton" render="output" />
            <br/>
            <br/>
            output: <h:outputText id="output" value="#{richPickListBean.value}" />
            <br/><br/>
            <fieldset> <b>DOES NOT WORK ATM</b>
                <legend>JavaScript API</legend>
                On click:
                <br/>
                <input id="addItemsSome" type="button" name="addItemsSome" value="addItems(firstThree)" onclick="RichFaces.component('form:pickList').addItems()" />
                <input id="addItemsAll" type="button" name="addItemsSome" value="addItems(allItems)" onclick="#{r:component('pickList')}.addItems()" />
                <input id="removeItemsSome" type="button" name="removeItemsSome" value="removeItems(firstTwo)" onclick="#{r:component('pickList')}.removeItems()" />
                <input id="removeItemsAll" type="button" name="removeItemsAll" value="removeItems(allItems)" onclick="#{r:component('pickList')}.removeItems()" />
            </fieldset>
        </ui:define>

        <ui:define name="outOfTemplateAfter">
            Attributes for pickList:
            <metamer:attributes value="#{richPickListBean.attributes}" id="attributes" />
        </ui:define>

    </ui:composition>
</html>
