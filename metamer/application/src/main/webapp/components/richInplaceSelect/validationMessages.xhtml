<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"  xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"  xmlns:r="http://richfaces.org"
      xmlns:validationMessages="http://java.sun.com/jsf/composite/validationMessages">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2014, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but inAtt ANY WARRANTY; inAtt even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along inBean this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->
    <ui:composition template="/templates/abstractions/validationMessagesTemplate.xhtml">
        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>


        <ui:define name="locatorFunction">
            <validationMessages:locatorFunction className="rf-is"/>
        </ui:define>
        <ui:define name="js">
            <ui:remove>
                TODO: remove whole 'define @name="js"' after issue with JS API solved (https://issues.jboss.org/browse/RF-12853). 
            </ui:remove>
            <script type="text/javascript">
                function setValues(value) {
                    $(getLocator()).each(function() {
                        $(this).click();
                        $(".rf-is-opt:visible:contains(" + value + ")").click();
                        RichFaces.component($(this)).save();
                    });
                }
                function command(button) {
                    document.valuesSettingState = "started";
                    if (button == "wrong") {
                        setValues(getBadValue());
                    } else {
                        setValues(getGoodValue());
                    }
                    document.valuesSettingState = "finished";
                }
                if (window.onload == null) {
                    window.onload = function() {
                        document.valuesSettingState = "";
                    }
                } else {
                    window.onload += function() {
                        document.valuesSettingState = "";
                    }
                }
            </script>
        </ui:define>

        <ui:define name="jsr-303-inBean">
            <r:inplaceSelect id="jsr-303-inBean" value="#{validationMessagesBean.valueWithMessagesJSR}" converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="jsr-303-inAtt">
            <r:inplaceSelect id="jsr-303-inAtt" value="#{validationMessagesBean.valueWithoutMessagesJSR}"
                             validatorMessage="Custom validator error message from attribute of component."
                             converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="jsr-303-inBundle">
            <r:inplaceSelect id="jsr-303-inBundle" value="#{validationMessagesBean.valueWithoutMessages2JSR}" converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="csv-inBean">
            <r:inplaceSelect id="csv-inBean" value="#{validationMessagesBean.valueWithMessagesCSV}" converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="csv-inAtt">
            <r:inplaceSelect  id="csv-inAtt" value="#{validationMessagesBean.valueWithoutMessagesCSV}"
                              validatorMessage="Custom validator error message from attribute of component."
                              converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="csv-inBundle">
            <r:inplaceSelect id="csv-inBundle" value="#{validationMessagesBean.valueWithoutMessages2CSV}" converter="#{validationMessagesBean.converter}">
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="jsf-inAtt">
            <r:inplaceSelect id="jsf-inAtt" value="#{validationMessagesBean.valueJSF}"
                             validatorMessage="Custom validator error message from attribute of component."
                             converter="#{validationMessagesBean.converter}">
                <f:validateDoubleRange minimum="2" maximum="9"/>
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>

        <ui:define name="jsf-inBundle">
            <r:inplaceSelect id="jsf-inBundle" value="#{validationMessagesBean.value2JSF}" converter="#{validationMessagesBean.converter}">
                <f:validateDoubleRange  minimum="2" maximum="9" />
                <f:selectItems value="#{validationMessagesBean.validationOptions}" />
            </r:inplaceSelect>
        </ui:define>
    </ui:composition>
</html>
