<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:a4j="http://richfaces.org/a4j"
   xmlns:rich="http://richfaces.org/rich" xmlns:f="http://java.sun.com/jsf/core" xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:metamer="http://java.sun.com/jsf/composite/metamer">

<!--
JBoss, Home of Professional Open Source
Copyright 2010-2011, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

<ui:composition template="/templates/template.xhtml">

   <ui:define name="view">
      <f:metadata>
         <f:viewParam name="templates" value="#{templateBean.templates}">
            <f:converter converterId="templatesListConverter" />
         </f:viewParam>
      </f:metadata>
   </ui:define>
   
   <ui:define name="head" >   
      <script>
      function submitOnEnter(event, componentId) {
          return true;
       }
      </script>      
   </ui:define>

   <ui:define name="component">
   
      <p>
         <a href="https://issues.jboss.org/browse/RF-12158">RF-12158</a>
         <br/>
         Issue summary: Autocomplete component re-renders panels with ajaxRendered=true at each character being typed in into the autocomplete box<br/>
         <br/>
         <i>
         See this sample: <a href="https://gist.github.com/2353552">https://gist.github.com/2353552</a><br/>
         And this forum entry: <a href="https://community.jboss.org/message/729173?tstart=0">https://community.jboss.org/message/729173?tstart=0</a><b/>
         <br/>
         I tried to remove this: onkeypress="return submitOnEnter(event, '#{rich:clientId('qsPayorSupcdCmdBtnId')}')"
         and it worked fine. This JS piece of code produces a programatic button click when Enter is pressed inside autocomplete box.</i>
         <br/><br/>
         To simulate this issue, created some autocomplete components with different attributes values (see desc on the left).<br/>
         There is one more property on model - randomString - which value is updated in every @autocompleteMethod call.<br/>
         So, value change (random number) near to "randomNumber" label indicate output panel re-rendered<br/>
         
         <br/>
         QE: haven't simulated issue, @limitRender works as expected
      </p>

      <h:panelGrid columns="2">

         <h:outputText value="with onkeypress handling and @limitRender:" />
         <rich:autocomplete id="autocompleteId" mode="cachedAjax" minChars="2" layout="table"
            autocompleteMethod="#{richAutocompleteBean.autocompleteCapital}" autofill="true" limitRender="true"
            value="#{richAutocompleteBean.attributes['value'].value}"
            onkeypress="return submitOnEnter(event, '#{rich:clientId('autocompleteId')}')" fetchValue="#{capital.state}"
            var="capital" maxlength="16" size="5">

            <rich:column>
               <h:outputText value="#{capital.state}" />
            </rich:column>
            <rich:column>
              [<h:outputText value="#{capital.name}" />]
            </rich:column>

         </rich:autocomplete>
         
         <h:outputText value="with onkeypress handling and without @limitRender:" />
         <rich:autocomplete id="autocompleteId1" mode="cachedAjax" minChars="2" layout="table"
            autocompleteMethod="#{richAutocompleteBean.autocompleteCapital}" autofill="true" limitRender="false"
            value="#{richAutocompleteBean.attributes['value'].value}"
            onkeypress="return submitOnEnter(event, '#{rich:clientId('autocompleteId')}')" fetchValue="#{capital.state}"
            var="capital" maxlength="16" size="5">

            <rich:column>
               <h:outputText value="#{capital.state}" />
            </rich:column>
            <rich:column>
              [<h:outputText value="#{capital.name}" />]
            </rich:column>

         </rich:autocomplete>

         <h:outputText value="without onkeypress handling and with @limitRender:" />
         <rich:autocomplete id="autocompleteId2" mode="cachedAjax" minChars="2" layout="table"
            autocompleteMethod="#{richAutocompleteBean.autocompleteCapital}" autofill="true" limitRender="true"
            value="#{richAutocompleteBean.attributes['value'].value}" fetchValue="#{capital.state}" var="capital" maxlength="16"
            size="5">

            <rich:column>
               <h:outputText value="#{capital.state}" />
            </rich:column>
            <rich:column>
               [<h:outputText value="#{capital.name}" />]
            </rich:column>

         </rich:autocomplete>
         
         <h:outputText value="without onkeypress handling and without @limitRender:" />
         <rich:autocomplete id="autocompleteId3" mode="cachedAjax" minChars="2" layout="table"
            autocompleteMethod="#{richAutocompleteBean.autocompleteCapital}" autofill="true"
            value="#{richAutocompleteBean.attributes['value'].value}" fetchValue="#{capital.state}" var="capital" maxlength="16"
            size="5">

            <rich:column>
               <h:outputText value="#{capital.state}" />
            </rich:column>
            <rich:column>
               [<h:outputText value="#{capital.name}" />]
            </rich:column>            

         </rich:autocomplete>
         
         <h:outputText value="without onkeypress handling, without @limitRender and @render:" />
         <rich:autocomplete id="autocompleteId4" mode="cachedAjax" minChars="2" layout="table"
            autocompleteMethod="#{richAutocompleteBean.autocompleteCapital}" autofill="true" render="outputPanel"
            value="#{richAutocompleteBean.attributes['value'].value}" fetchValue="#{capital.state}" var="capital" maxlength="16"
            size="5">

            <rich:column>
               <h:outputText value="#{capital.state}" />
            </rich:column>
            <rich:column>
               [<h:outputText value="#{capital.name}" />]
            </rich:column>
            
            <a4j:ajax event="change"
                      render="outputPanel"                          
                      listener="#{richBean.changeEventListener}" />

            <a4j:ajax event="selectitem" render="outputPanel" listener="#{richAutocompleteBean.actionListener}" />

         </rich:autocomplete>
         
         <a4j:outputPanel ajaxRendered="true" id="outputPanel" >
            Your selection: <h:outputText id="output2" value="#{richAutocompleteBean.attributes['value'].value}"/>
            <br/>
            randomString: <h:outputText id="outputVal2" value="#{richAutocompleteBean.randomString}" />
         </a4j:outputPanel>

      </h:panelGrid>

   </ui:define>

</ui:composition>
</html>