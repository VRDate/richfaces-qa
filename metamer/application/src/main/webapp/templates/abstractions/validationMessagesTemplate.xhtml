<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:ui="http://java.sun.com/jsf/facelets"  xmlns:r="http://richfaces.org"
      xmlns:validationMessages="http://java.sun.com/jsf/composite/validationMessages">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2014, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but inAtt ANY WARRANTY; inAtt even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along inBean this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="component">

            <h:outputText id="currRB" value="Current message resource bundle: #{validationMessagesBean.printCurrentResourceBundle()}."/>
            <br/>
            Activate own message bundle (JSF validation only):
            <br/>
            <r:commandButton id="activateButton" value="activate" action="#{validationMessagesBean.activate}" render="currRB"/>
            <r:commandButton id="deactivateButton" value="deactivate" action="#{validationMessagesBean.deactivate}" render="currRB"/>

            <br/><br/>
            Submit buttons:<br/>
            <h:commandButton id="hButton" value="h:commandButton" style="margin-right: 10px;"/>
            <r:commandButton id="a4jButton" value="r:commandButton"/>
            <br/><br/>

            <ui:insert name="locatorFunction">
                <!-- e.g.:--> 
                <validationMessages:locatorFunction className="rf-au"/>
            </ui:insert>
            <ui:insert name="getValuesFunctions">
                <validationMessages:valuesFunctions bad="10" good="5"/>
            </ui:insert>
            <ui:insert name="js">
                <script type="text/javascript">
                    function setValues(value) {
                        $(getLocator()).each(function() {
                            RichFaces.component($(this)).setValue(value);//invoke RichFaces JS API function
                        });
                    }
                    function command(button) {
                        document.valuesSettingState = "started";
                        if (button == "wrong") {
                            setValues(getBadValue());
                        } else {
                            setValues(getGoodValue());
                        }
                        document.valuesSettingState = "finished";
                    }
                    if (window.onload == null) {
                        window.onload = function() {
                            document.valuesSettingState = "";
                        }
                    } else {
                        window.onload += function() {
                            document.valuesSettingState = "";
                        }
                    }
                </script>
            </ui:insert>
            Values setting:
            <br/>
            <input id="setCorrectValuesButton" name="setCorrectValuesButton" type="button" value="set correct values" onclick="command('correct')"/>
            <input id="setWrongValuesButton" name="setWrongValuesButton" type="button" value="set wrong values" onclick="command('wrong')"/>
            <br/><br/>

            <ui:insert name="valueDescription">
                <h:outputText value="#{validationMessagesBean.numberInputDescription}" />
            </ui:insert>

            <br/><br/>
            JSR-303:
            <h:panelGrid columns="3">

                <h:outputLabel for="jsr-303-inBean" value="Validation messages set in bean:" />
                <ui:insert name="jsr-303-inBean"/>
                <r:message id="jsr-303-inBean-msg" for="jsr-303-inBean" />


                <h:outputLabel for="jsr-303-inAtt" value="Validation message set in attribute:" />
                <ui:insert name="jsr-303-inAtt"/>
                <r:message id="jsr-303-inAtt-msg" for="jsr-303-inAtt" />


                <h:outputLabel for="jsr-303-inBundle" value="Validation message set in bundle:" />
                <ui:insert name="jsr-303-inBundle"/>
                <r:message id="jsr-303-inBundle-msg" for="jsr-303-inBundle" />
            </h:panelGrid>

            <br/><br/>
            CSV: 
            <h:panelGrid columns="3">
                <r:validator>
                    <h:outputLabel for="csv-inBean"  value="Validation messages set in bean:" />
                    <ui:insert name="csv-inBean"/>
                    <r:message id="csv-inBean-msg" for="csv-inBean" />


                    <h:outputLabel for="csv-inAtt" value="Validation message set in attribute:" />
                    <ui:insert name="csv-inAtt"/>
                    <r:message id="csv-inAtt-msg" for="csv-inAtt" />


                    <h:outputLabel for="csv-inBundle" value="Validation messages set in bundle:" />
                    <ui:insert name="csv-inBundle"/>
                    <r:message id="csv-inBundle-msg" for="csv-inBundle" />
                </r:validator>
            </h:panelGrid>

            <br/><br/>
            JSF validation: 
            <h:panelGrid columns="3">
                <h:outputLabel for="jsf-inAtt" value="Validation message set in attribute:" />
                <ui:insert name="jsf-inAtt"/>
                <r:message id="jsf-inAtt-msg" for="jsf-inAtt" />


                <h:outputLabel for="jsf-inBundle" value="Validation messages set in bundle:" />
                <ui:insert name="jsf-inBundle"/>    
                <r:message id="jsf-inBundle-msg" for="jsf-inBundle" />
            </h:panelGrid>
        </ui:define>

        <ui:define name="outOfTemplateAfter">
        </ui:define>

    </ui:composition>
</html>
